/*

Scripts to create catalog views
These views must be created in the sequence specified because
of interdependences.)

*/

CREATE   OR REPLACE VIEW USERS
        (USER_NAME) AS
SELECT   DISTINCT UPPER(CONCAT('''',USER,'''@''',HOST,''''))
FROM     MYSQL.USER

CREATE   OR REPLACE VIEW TABLES
        (TABLE_CREATOR, TABLE_NAME,
         CREATE_TIMESTAMP, COMMENT) AS
SELECT   UPPER(TABLE_SCHEMA), UPPER(TABLE_NAME),
         CREATE_TIME, TABLE_COMMENT
FROM     INFORMATION_SCHEMA.TABLES
WHERE    TABLE_TYPE IN ('BASE TABLE','TEMPORARY')

CREATE   OR REPLACE VIEW COLUMNS
        (TABLE_CREATOR, TABLE_NAME, COLUMN_NAME,
         COLUMN_NO, DATA_TYPE, CHAR_LENGTH,
        `PRECISION`, SCALE, NULLABLE, COMMENT) AS
SELECT   UPPER(TABLE_SCHEMA), UPPER(TABLE_NAME),
         UPPER(COLUMN_NAME), ORDINAL_POSITION,
         UPPER(DATA_TYPE), CHARACTER_MAXIMUM_LENGTH,
         NUMERIC_PRECISION, NUMERIC_SCALE, IS_NULLABLE,
         COLUMN_COMMENT
FROM     INFORMATION_SCHEMA.COLUMNS

CREATE   OR REPLACE VIEW VIEWS
        (VIEW_CREATOR, VIEW_NAME, CREATE_TIMESTAMP,
         WITHCHECKOPT, IS_UPDATABLE, VIEWFORMULA, COMMENT) AS
SELECT   UPPER(V.TABLE_SCHEMA), UPPER(V.TABLE_NAME),
         T.CREATE_TIME,
         CASE
            WHEN V.CHECK_OPTION = 'None' THEN 'NO'
            WHEN V.CHECK_OPTION = 'Cascaded' THEN 'CASCADED'
            WHEN V.CHECK_OPTION = 'Local' THEN 'LOCAL'
            ELSE 'Yes'
         END, V.IS_UPDATABLE, V.VIEW_DEFINITION, T.TABLE_COMMENT
FROM     INFORMATION_SCHEMA.VIEWS AS V,
         INFORMATION_SCHEMA.TABLES AS T
WHERE    V.TABLE_NAME = T.TABLE_NAME
AND      V.TABLE_SCHEMA = T.TABLE_SCHEMA
CREATE   OR REPLACE VIEW INDEXES
        (INDEX_CREATOR, INDEX_NAME, CREATE_TIMESTAMP,
         TABLE_CREATOR, TABLE_NAME, UNIQUE_ID, INDEX_TYPE) AS
SELECT   DISTINCT UPPER(I.INDEX_SCHEMA), UPPER(I.INDEX_NAME),
         T.CREATE_TIME, UPPER(I.TABLE_SCHEMA),
         UPPER(I.TABLE_NAME),
         CASE
            WHEN I.NON_UNIQUE = 0 THEN 'YES'
            ELSE 'NO'
         END,
         I.INDEX_TYPE
FROM     INFORMATION_SCHEMA.STATISTICS AS I,
         INFORMATION_SCHEMA.TABLES AS T
WHERE    I.TABLE_NAME = T.TABLE_NAME
AND      I.TABLE_SCHEMA = T.TABLE_SCHEMA

CREATE   OR REPLACE VIEW COLUMNS_IN_INDEX
        (INDEX_CREATOR, INDEX_NAME,
         TABLE_CREATOR, TABLE_NAME, COLUMN_NAME,
         COLUMN_SEQ, ORDERING) AS
SELECT   UPPER(INDEX_SCHEMA), UPPER(INDEX_NAME),
         UPPER(TABLE_SCHEMA), UPPER(TABLE_NAME),
         UPPER(COLUMN_NAME), SEQ_IN_INDEX,
         CASE
            WHEN COLLATION = 'A' THEN 'ASCENDING'
            WHEN COLLATION = 'D' THEN 'DESCENDING'
            ELSE 'OTHER'
         END
FROM     INFORMATION_SCHEMA.STATISTICS

CREATE   OR REPLACE VIEW USER_AUTHS
        (GRANTOR, GRANTEE, PRIVILEGE, WITHGRANTOPT) AS
SELECT   'UNKNOWN', UPPER(GRANTEE), PRIVILEGE_TYPE, IS_GRANTABLE
FROM     INFORMATION_SCHEMA.USER_PRIVILEGES

CREATE   OR REPLACE VIEW DATABASE_AUTHS
        (GRANTOR, GRANTEE, DATABASENAME, PRIVILEGE,
         WITHGRANTOPT) AS
SELECT   'UNKNOWN', UPPER(GRANTEE), UPPER(TABLE_SCHEMA),
         PRIVILEGE_TYPE, IS_GRANTABLE
FROM     INFORMATION_SCHEMA.SCHEMA_PRIVILEGES

CREATE   OR REPLACE VIEW TABLE_AUTHS
        (GRANTOR, GRANTEE, TABLE_CREATOR, TABLE_NAME,
         PRIVILEGE, WITHGRANTOPT) AS
SELECT   'UNKNOWN', UPPER(GRANTEE), UPPER(TABLE_SCHEMA),
         UPPER(TABLE_NAME), PRIVILEGE_TYPE, IS_GRANTABLE
FROM     INFORMATION_SCHEMA.TABLE_PRIVILEGES

CREATE   OR REPLACE VIEW COLUMN_AUTHS
        (GRANTOR, GRANTEE, TABLE_CREATOR, TABLE_NAME,
         COLUMN_NAME, PRIVILEGE, WITHGRANTOPT) AS
SELECT   'UNKNOWN', UPPER(GRANTEE), UPPER(TABLE_SCHEMA),
         UPPER(TABLE_NAME), UPPER(COLUMN_NAME),
         PRIVILEGE_TYPE, IS_GRANTABLE
FROM     INFORMATION_SCHEMA.COLUMN_PRIVILEGES

